package com.newsmths.util;

import java.io.UnsupportedEncodingException;
import java.util.Date;
import java.util.Properties;

import javax.mail.Address;
import javax.mail.Authenticator;
import javax.mail.Message;
import javax.mail.MessagingException;
import javax.mail.NoSuchProviderException;
import javax.mail.PasswordAuthentication;
import javax.mail.Session;
import javax.mail.Transport;
import javax.mail.internet.AddressException;
import javax.mail.internet.InternetAddress;
import javax.mail.internet.MimeMessage;

import org.apache.log4j.Logger;

import com.newsmths.ide.task.MailTask;

public class MailUtil {

	private static Logger log = Logger.getLogger(MailUtil.class);
	int port = 25;
	// 邮件服务器mail.cpip.net.cn
	String smtpHost = PropHelper.prop.getProperty("smtpHost");
	String smtpUser = PropHelper.prop.getProperty("smtpUser");
	String smtpPwd = PropHelper.prop.getProperty("smtpPwd");
	String from = PropHelper.prop.getProperty("from");
	String to = PropHelper.prop.getProperty("to");
	
	public void sendEmail(String email, String subject, String body)
			throws UnsupportedEncodingException {
		try {
			Properties props = new Properties();
			props.put("mail.smtp.host", smtpHost);
			props.put("mail.smtp.port", String.valueOf(port));
			props.put("mail.smtp.auth", "true");

			Transport transport = null;
			Session session = Session.getDefaultInstance(props, null);
			transport = session.getTransport("smtp");
			transport.connect(smtpHost, smtpUser, smtpPwd);

			MimeMessage msg = new MimeMessage(session);
			msg.setSentDate(new Date());
			InternetAddress fromAddress = new InternetAddress("User", from,
					"UTF-8");
			msg.setFrom(fromAddress);
			InternetAddress[] toAddress = new InternetAddress[1];
			toAddress[0] = new InternetAddress(email);
			msg.setRecipients(Message.RecipientType.TO, toAddress);
			msg.setSubject(subject, "UTF-8");
			// msg.setText(body, "UTF-8");
			msg.setContent(body, "text/html;charset = UTF-8");
			msg.saveChanges();

			transport.sendMessage(msg, msg.getAllRecipients());
		} catch (NoSuchProviderException e) {
			e.printStackTrace();
		} catch (MessagingException e) {
			e.printStackTrace();
		}
	}



	public void SendJavaMail(String email, String subject, String body) {
		Properties p = new Properties();
		p.put("mail.smtp.host", smtpHost);
		p.put("mail.smtp.port", "25");
		p.put("mail.smtp.auth", "true");
		Authenticator authenticator = new Authenticator() {
			@Override
			protected PasswordAuthentication getPasswordAuthentication() {
				return new PasswordAuthentication(smtpUser,
						smtpPwd);
			}
		};
		Session sendMailSession = Session.getDefaultInstance(p, authenticator);
		Message mailMessage = new MimeMessage(sendMailSession);
		try {
			mailMessage.setFrom(new InternetAddress(from));

			Address to = new InternetAddress(email);// 设置接收人员
			mailMessage.setRecipient(Message.RecipientType.TO, to);
			mailMessage.setSubject(subject);// 设置邮件标题

			// mailMessage.setText(body); // 设置邮件内容
			mailMessage.setContent(body, "text/html;charset = UTF-8");

			Transport.send(mailMessage);
		} catch (AddressException e) {
			e.printStackTrace();
			log.error("发送邮件失败:", e);
		} catch (MessagingException e) {
			e.printStackTrace();
			log.error("发送邮件失败:", e);
		}
	}

	public static void main(String args[]) throws UnsupportedEncodingException {
		PropHelper.getInstance();
		MailUtil mail = new MailUtil();
		mail.SendJavaMail("coola58@163.com", "邮件测试", "这是一个发送邮件测试");// 收件人
	}
}